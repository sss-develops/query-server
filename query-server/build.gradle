buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'jacoco'
    id 'java'
}

group = 'project.goorm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.6")
}

dependencies {
    // SpringBoot
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web:2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.7.8')

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // JPA, QueryDSL
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    implementation("com.querydsl:querydsl-apt:${queryDslVersion}")
    implementation("com.querydsl:querydsl-core:${queryDslVersion}")

    // MySQL
    implementation(group: 'mysql', name: 'mysql-connector-java', version: '8.0.28')
    runtimeOnly('mysql:mysql-connector-java')
    testImplementation "org.testcontainers:mysql:1.17.6"

    // Redis
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation(group: 'it.ozimov', name: 'embedded-redis', version: '0.7.1')
    implementation('org.redisson:redisson-spring-boot-starter:3.16.8')
    
    // Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation('org.springframework.restdocs:spring-restdocs-restassured')
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"


    // Lombok
    compileOnly('org.projectlombok:lombok:1.18.22')
    testCompileOnly('org.projectlombok:lombok:1.18.12')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation "org.testcontainers:kafka:1.17.6"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


//--------------------------------------------------------------------------

// QueryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
    asciidoctorExtensions
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
